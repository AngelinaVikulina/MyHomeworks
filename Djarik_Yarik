section .data
    x dd 10          ; Задаем значение переменной x (например, 10)
    format db "Result: %d", 10, 0  ; Строка формата для вывода результата

section .text
    global _start

_start:
    ; Рассчитываем значение выражения y = -2x / 14
    mov eax, dword [x]     ; Загружаем значение x в регистр eax
    imul eax, eax, -2      ; Умножаем x на -2
    mov ebx, 14            ; Загружаем делитель 14 в регистр ebx
    idiv ebx               ; Делим результат в eax на 14

    ; Подготавливаем аргументы для вызова функции printf
    mov rdi, format        ; Передаем адрес строки формата в регистр rdi
    mov rsi, rax           ; Передаем результат вычислений в регистр rsi (первый аргумент для printf)
    xor rax, rax           ; Обнуляем rax (это второй аргумент для printf)

    ; Вызываем системный вызов для вывода строки с помощью write
    mov rax, 1             ; Номер системного вызова для write (syscall number)
    mov rdi, 1             ; Файловый дескриптор stdout (1)
    mov rdx, 15            ; Длина строки (15 байт, включая символ новой строки)
    syscall                ; Вызываем системный вызов

    ; Выходим из программы
    mov eax, 60            ; Номер системного вызова для выхода из программы (syscall number)
    xor edi, edi           ; Код возврата 0
    syscall                ; Вызываем системный вызов для завершения программы
